# Remove Netlify's sitemap plugin
# [[plugins]]
# package = "@netlify/plugin-sitemap"
#   [plugins.inputs]
#   exclude = "/*"

# Environment configuration
[context.production.environment]
  NETLIFY_KV_STORE_ID = "your-kv-store-id" # Replace with actual KV store ID
  NODE_ENV = "production"

# Build configuration
[build]
  command = "npm run build"
  publish = "dist"
  node-version = "18.19.0"

[build.environment]
  # Ensure devDependencies (like Vite, TypeScript, plugins) are installed on Netlify
  NPM_FLAGS = "--include=dev --legacy-peer-deps"
  NPM_CONFIG_PRODUCTION = "false"
  NODE_VERSION = "18.19.0"
  NODE_OPTIONS = "--openssl-legacy-provider"

# Functions configuration
[functions]
  directory = "netlify/functions"
  node_bundler = "esbuild"

# Edge Functions configuration
[[edge_functions]]
function = "dynamic-meta"
path = "/blog*"

[[edge_functions]]
function = "dynamic-meta"
path = "/tools*"

[[edge_functions]]
function = "dynamic-meta"
path = "/resources*"

[[edge_functions]]
function = "dynamic-meta"
path = "/categories*"

[[edge_functions]]
function = "dynamic-meta"
path = "/tags*"

[[edge_functions]]
function = "dynamic-meta"
path = "/prompts*"

[[edge_functions]]
function = "dynamic-meta"
path = "/ai-automation*"

[[edge_functions]]
function = "dynamic-meta"
path = "/ai-tutorials*"

[[edge_functions]]
function = "dynamic-meta"
path = "/youtube*"

[[edge_functions]]
function = "dynamic-meta"
path = "/dashboard*"

[[edge_functions]]
function = "dynamic-meta"
path = "/company*"

# Direct category page routes
[[edge_functions]]
function = "dynamic-meta"
path = "/all-ai-tools*"

[[edge_functions]]
function = "dynamic-meta"
path = "/text-generators*"

[[edge_functions]]
function = "dynamic-meta"
path = "/image-generators*"

[[edge_functions]]
function = "dynamic-meta"
path = "/video-tools*"

[[edge_functions]]
function = "dynamic-meta"
path = "/productivity-tools*"

[[edge_functions]]
function = "dynamic-meta"
path = "/ai-for-business*"

# Security headers for all pages
[[headers]]
  for = "/*"
  [headers.values]
    X-Frame-Options = "DENY"
    X-XSS-Protection = "1; mode=block"
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Permissions-Policy = "camera=(), microphone=(), geolocation=()"
    Content-Security-Policy = """
      default-src 'self';
      script-src 'self' 'unsafe-inline' 'unsafe-eval' https://clerk.aiterritory.org https://*.clerk.accounts.dev https://js.stripe.com https://www.googletagmanager.com https://www.google-analytics.com;
      style-src 'self' 'unsafe-inline' https://fonts.googleapis.com;
      font-src 'self' https://fonts.gstatic.com;
      img-src 'self' data: https: blob:;
      connect-src 'self' https://aiterritory-com.onrender.com https://clerk.aiterritory.org https://*.clerk.accounts.dev https://api.stripe.com wss://*.clerk.accounts.dev https://ckahkadgnaxzcfhmsdaj.supabase.co wss://ckahkadgnaxzcfhmsdaj.supabase.co https://www.google-analytics.com https://www.googletagmanager.com;
      frame-src https://js.stripe.com https://www.youtube.com https://www.youtube-nocookie.com;
      worker-src 'self' blob:;
    """

# Cache headers for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/static/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/(.*).(js|css|webp|svg|jpg|jpeg|png|woff2|woff|ttf|eot)"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Redirects for removed fallback pages
[[redirects]]
  from = "/resources/best-ai-3d-generators"
  to = "/"
  status = 301

[[redirects]]
  from = "/company/update-tool"
  to = "/"
  status = 301

[[redirects]]
  from = "/company/skill-leap"
  to = "/"
  status = 301

[[redirects]]
  from = "/categories/art-generators"
  to = "/"
  status = 301

[[redirects]]
  from = "/categories/audio-generators"
  to = "/"
  status = 301

# API redirects to backend
[[redirects]]
  from = "/api/blogs/*"
  to = "https://aiterritory-com.onrender.com/api/blogs/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/api/comments/*"
  to = "https://aiterritory-com.onrender.com/api/comments/:splat"
  status = 200
  force = true

[[redirects]]
  from = "/api/*"
  to = "https://aiterritory-com.onrender.com/api/:splat"
  status = 200
  force = true

# Blog redirects
[[redirects]]
  from = "/blog/*"
  to = "https://aiterritory-com.onrender.com/blog/:splat"
  status = 200
  force = true

# 301 redirects for www and http versions
[[redirects]]
  from = "http://aiterritory.org/*"
  to = "https://aiterritory.org/:splat"
  status = 301
  force = true

[[redirects]]
  from = "https://www.aiterritory.org/*"
  to = "https://aiterritory.org/:splat"
  status = 301
  force = true

[[redirects]]
  from = "http://www.aiterritory.org/*"
  to = "https://aiterritory.org/:splat"
  status = 301
  force = true

# Remove query parameters from specific pages to prevent duplicate content
[[redirects]]
  from = "/tools/ai-text-generators*"
  to = "/tools/ai-text-generators"
  status = 301
  force = true

[[redirects]]
  from = "/company/request-feature*"
  to = "/company/request-feature"
  status = 301
  force = true

# General query parameter cleanup for all pages
[[redirects]]
  from = "/*"
  to = "/:splat"
  status = 200
  conditions = {query = {utm_source = ".*", utm_medium = ".*", utm_campaign = ".*", utm_term = ".*", utm_content = ".*", gclid = ".*", fbclid = ".*", _ga = ".*", _gl = ".*"}}
  force = true

# Catch-all redirect for SPA
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

[dev]
  command = "npm run dev"
  port = 3000
  publish = "dist"
  targetPort = 3000